// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/mission": {
            "get": {
                "description": "Retrieves a list of all missions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.ListMissionsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new mission with the specified details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "parameters": [
                    {
                        "description": "Mission details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.CreateMissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.CreateMissionResponse"
                        }
                    }
                }
            }
        },
        "/mission/{id}": {
            "get": {
                "description": "Retrieves a specific mission by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.GetMissionResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a mission by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mission deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mission/{id}/assign": {
            "post": {
                "description": "Assigns a Spy Cat to a specified mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assignment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.AssignSpyCatToMissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spy Cat assigned to mission successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mission/{id}/completion": {
            "put": {
                "description": "Updates the completion status of a mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update completion status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_mission.UpdateMissionCompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mission completion updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mission/{id}/targets": {
            "post": {
                "description": "Adds multiple targets to a specific mission.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Add targets to a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Targets Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_target.AddTargetsToMissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Targets added to mission successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spycat": {
            "get": {
                "description": "Retrieves a list of all SpyCats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpyCats"
                ],
                "operationId": "list-spycats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_spy_cat.ListSpyCatsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new SpyCat with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpyCats"
                ],
                "operationId": "create-spycat",
                "parameters": [
                    {
                        "description": "SpyCat Creation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_spy_cat.CreateSpyCatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Spy Cat with id {id} was successfully created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spycat/{id}": {
            "get": {
                "description": "Retrieves a SpyCat by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpyCats"
                ],
                "operationId": "get-spycat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SpyCat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_spy_cat.GetSpyCatResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a SpyCat by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpyCats"
                ],
                "operationId": "delete-spycat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SpyCat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spy Cat deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spycat/{id}/salary": {
            "put": {
                "description": "Updates the salary of a SpyCat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpyCats"
                ],
                "operationId": "update-spycat-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SpyCat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SpyCat Salary Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_spy_cat.UpdateSpyCatSalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spy Cat salary updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/target/{id}": {
            "delete": {
                "description": "Deletes a specific target.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Delete a target",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/target/{id}/completion": {
            "put": {
                "description": "Updates the completion status of a target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Update target completion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Completion Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_target.UpdateTargetCompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target completion updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/target/{id}/notes": {
            "put": {
                "description": "Updates the notes of a target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Update target notes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notes Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sca_internal_service_target.UpdateTargetNotesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target notes updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "sca_internal_service_mission.AssignSpyCatToMissionRequest": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer"
                },
                "mission_id": {
                    "type": "integer"
                }
            }
        },
        "sca_internal_service_mission.CreateMissionRequest": {
            "type": "object",
            "required": [
                "cat_id",
                "targets"
            ],
            "properties": {
                "cat_id": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sca_internal_service_target.Target"
                    }
                }
            }
        },
        "sca_internal_service_mission.CreateMissionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "sca_internal_service_mission.GetMissionResponse": {
            "type": "object",
            "properties": {
                "mission": {
                    "$ref": "#/definitions/sca_internal_service_mission.Mission"
                }
            }
        },
        "sca_internal_service_mission.ListMissionsResponse": {
            "type": "object",
            "properties": {
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sca_internal_service_mission.Mission"
                    }
                }
            }
        },
        "sca_internal_service_mission.Mission": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sca_internal_service_target.Target"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "sca_internal_service_mission.UpdateMissionCompletionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                }
            }
        },
        "sca_internal_service_spy_cat.CreateSpyCatRequest": {
            "type": "object",
            "required": [
                "breed",
                "name",
                "salary",
                "years_of_experience"
            ],
            "properties": {
                "breed": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "salary": {
                    "type": "number",
                    "minimum": 0
                },
                "years_of_experience": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "sca_internal_service_spy_cat.GetSpyCatResponse": {
            "type": "object",
            "properties": {
                "spy_cat": {
                    "$ref": "#/definitions/sca_internal_service_spy_cat.SpyCat"
                }
            }
        },
        "sca_internal_service_spy_cat.ListSpyCatsResponse": {
            "type": "object",
            "properties": {
                "spy_cats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sca_internal_service_spy_cat.SpyCat"
                    }
                }
            }
        },
        "sca_internal_service_spy_cat.SpyCat": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "years_of_experience": {
                    "type": "integer"
                }
            }
        },
        "sca_internal_service_spy_cat.UpdateSpyCatSalaryRequest": {
            "type": "object",
            "required": [
                "salary"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "salary": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "sca_internal_service_target.AddTargetsToMissionRequest": {
            "type": "object",
            "required": [
                "mission_id",
                "targets"
            ],
            "properties": {
                "mission_id": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sca_internal_service_target.Target"
                    }
                }
            }
        },
        "sca_internal_service_target.Target": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "mission_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "sca_internal_service_target.UpdateTargetCompletionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                }
            }
        },
        "sca_internal_service_target.UpdateTargetNotesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
